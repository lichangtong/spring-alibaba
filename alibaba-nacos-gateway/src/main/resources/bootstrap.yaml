#server:
#  port: 8081
server:
  path: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850

spring:
  profiles:
    active: dev
  application:
    name: gateway
  cloud:
    nacos:
      discovery:
        server-addr: ${server.path}
        username: alibaba
        password: 123456
        namespace: 08e0b806-874c-4fb7-afe3-f16e7fdc2086
        group: DEFAULT_GROUP
        register-enabled: true
      config:
        prefix: ${spring.application.name}
        server-addr: ${server.path}
        file-extension: yaml
        refresh-enabled: true
        namespace: 08e0b806-874c-4fb7-afe3-f16e7fdc2086
        group: DEFAULT_GROUP
        username: alibaba
        password: 123456
#        A: 通过spring.cloud.nacos.config.shared-dataids定义的共享配置
#        B: 通过spring.cloud.nacos.config.ext-config[n]定义的加载配置
#        C: 通过内部规则（spring.cloud.nacos.config.prefix、spring.cloud.nacos.config.file-extension、spring.cloud.nacos.config.group这几个参数）拼接出来的配置
#        shared-configs: ## yaml 配置数组方式对象  共享配置 A   后面加载的配置会覆盖之前加载的配置，所以优先级关系是：A < B < C
#          - dataId: 12312321.yaml
#            group: DEFAULT_GROUP
#            refresh: true
#          - dataId: 12312321.yaml
#            group: DEFAULT_GROUP
#            refresh: true
#        extension-configs: ## yaml 配置数组方式对象 扩展配置 B 后面加载的配置会覆盖之前加载的配置，所以优先级关系是：A < B < C
#          - dataId: 12312321.yaml
#            group: DEFAULT_GROUP
#            refresh: true
#         - dataId: abcdef.yaml
#           group: DEFAULT_GROUP
#           refresh: true
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080 #指定Sentinel DashBoard服务地址
        port: 8719  #默认8719端口，假如被占用会自动从8719开始依次+1扫描，直至找到未被占用的端口


#    gateway:
#      discovery:
#        locator:
#          enabled: true
#          lower-case-service-id: true
#      routes:

#demo:
#  namespace: gateway-dev.yaml
#server:
#  port: 8081
#spring:
#  cloud:
#    gateway:
#      discovery:
#        locator:
#          # 让gateway通过服务发现组件找到其他的微服务
#          enabled: true
#        ##可以通过小写的服务名称进行访问了locator
#        lowerCaseServiceId: true
#      enabled: true
#    #    gateway:
#    #      routes:
#    #        - id: provider-server
#    #          uri: lb://provider-server
#    #          predicates:
#    #            - path=/provider-server/**
#    #        - id: consumer-server
#    #          uri: lb://consumer-server
#    #          predicates:
#    #            - path=/consumer-server/**
#    #        - id: payment-service
#    #          uri: lb://payment-service
    ##          predicates:
    ##            - path=/payment-service/**






#routes:
#  - id: provider-server
#    uri: lb://provider-server
#    predicates:
#      - Path=/provider-server/**
#  - id: consumer-server
#    uri: lb://consumer-server
#    predicates:
#      - Path=/consumer-server/**
#  - id: payment-service
#    uri: lb://payment-service
#    predicates:
#      - Path=/payment-service/**